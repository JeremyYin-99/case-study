{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8000';\nexport const getAIMessage = async message => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/chat`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: message\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Failed to send message to agent');\n    }\n    const data = await response.json();\n    return data.response;\n  } catch (error) {\n    console.error('Error sending message to agent:', error);\n    // You might want to re-throw the error, or return a default value,\n    // or handle it in a way that your UI can display an error message.\n    throw error; // Re-throw to be caught by the component calling this function\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getAIMessage","message","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","error","data","console"],"sources":["/Users/jeremyyin/Documents/GitHub/case-study/src/api/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\n\nexport const getAIMessage = async (message) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/chat`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ message: message }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error || 'Failed to send message to agent');\n        }\n\n        const data = await response.json();\n        return data.response;\n    } catch (error) {\n        console.error('Error sending message to agent:', error);\n        // You might want to re-throw the error, or return a default value,\n        // or handle it in a way that your UI can display an error message.\n        throw error; // Re-throw to be caught by the component calling this function\n    }\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,YAAa,OAAM,EAAE;MACjDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,OAAO,EAAEA;MAAQ,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,KAAK,IAAI,iCAAiC,CAAC;IACzE;IAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,OAAOG,IAAI,CAACZ,QAAQ;EACxB,CAAC,CAAC,OAAOW,KAAK,EAAE;IACZE,OAAO,CAACF,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD;IACA;IACA,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}